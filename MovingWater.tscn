[gd_scene load_steps=4 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform vec4 blue_tint : hint_color;

float rand(vec2 coord){
	return fract(sin(dot(coord,vec2(12.9898, 78.233)))* 43758.5453123);
	}
	
float noise(vec2 coord){
	vec2 i = floor(coord);
	vec2 f = fract(coord);
	
	float a = rand(i);
	float b = rand(i + vec2(1.0,0.0));
	float c = rand(i + vec2(0.0,1.0));
	float d = rand(i + vec2(1.0,1.0));
	
	vec2 cubic = f*f*(3.0 -2.0*f);
	return mix(a,b, cubic.x) + (c-a) * cubic.y * (1.0 - cubic.x) + (d-b) * cubic.x * cubic.y;
	}

void fragment(){
	vec2 noisecoord1 = UV * 8.0;
	vec2 noisecoord2 = UV * 8.0 + 4.0;
	
	vec2 motion1 = vec2(TIME *0.3, TIME* -0.4);
	vec2 motion2 = vec2(TIME *0.2, TIME* 0.5);//change la vitesse des vagues
	
	vec2 distort1 = vec2(noise(noisecoord1 + motion1), noise(noisecoord2 +motion1));
	
	vec2 distort2 = vec2(noise(noisecoord1 + motion2), noise(noisecoord2 +motion2));
	
	vec2 distort_sum = (distort1 + distort2) / 120.0; //pour changer l'amplitude de distortion des vagues
	
	vec4 color = textureLod(SCREEN_TEXTURE, SCREEN_UV + distort_sum, 0.0);
	
	color = mix(color, blue_tint, 0.3);
	color.rgb = mix(vec3(.5),color.rgb, 1.4);
	
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/blue_tint = Color( 0.6, 0.282353, 0.678431, 1 )

[node name="Node2D" type="Node2D"]
position = Vector2( -258.439, 1065.4 )

[node name="WATER" type="Sprite" parent="."]
material = SubResource( 2 )
position = Vector2( 524.501, 422.821 )
scale = Vector2( 24.1094, 20.1872 )
texture = ExtResource( 1 )

